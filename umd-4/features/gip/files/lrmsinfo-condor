#!/usr/bin/env python
# coding: utf8

import time
import htcondor
import argparse
import datetime


collector = htcondor.Collector()

workers=collector.query(htcondor.AdTypes.Startd)

class StartdInfo(object):
    """
    Startd is a object to store usefull data
    """
    def __init__(self,collector):
        """
        Initialize StartdInfo
        """
        self.totals={
            'nactive' : 0,
            'nfree'   : 0,
            'now'     : "%d" % time.time(),
            'schedCycle' : 26
        }
        for wn in collector.query(htcondor.AdTypes.Startd):
            self.totals['nactive']+=wn['Cpus']
            if wn['State'] == '"Claimed"':
               self.totals['nfree']+=wn['Cpus']

    def printAll(self):
        print """
nactive\t{nactive}
nfree\t{nfree}
now\t{now}
schedCycle\t{schedCycle}
""".format(**self.totals)


class ScheddInfo(object):
    """
    Startd is a object to store usefull data
    """
    def __init__(self,collector):
        """
        Initialize ScheddInfo
        """
        self.scheduler=htcondor.Schedd(collector.locateAll(htcondor.DaemonTypes.Schedd)[0])

    def printAll(self):
        for jobca in self.scheduler.query():

            # This is a kludge: jobca is a classad object and it
            # seems to give some problem when adding fields. 
            # copying it into simple dictionary does teh job.
            job = {}

            for x in jobca.keys():
                job[x] = jobca[x]

            (job['user'], job['queue']) = job['User'].split('@')
            try:
                job['group'] = job['x509UserProxyVOName'].split('"')[0]
            except:
                job['group'] = "no-group"

            if job['JobStatus'] == 0 or job['JobStatus'] == 1:
                job['status'] = 'queued'
            elif job['JobStatus'] == 2:
                job['status'] = 'running'
            else:
                continue

            if 'JobStartDate' in job.keys():
                job['walltime'] = ("%d" % (time.time()-job['JobStartDate']))
            else:
                job['walltime'] = 0.0
                job['JobStartDate'] = job['QDate']

            if job['status'] == 'queued' and (time.time() - job['QDate']) < 3600:
                continue

            try:
                job['CreamQueue'] = job['CreamQueue'].split('"')[0]
            except:
                job['CreamQueue'] = 'no-cream-queue'

            jobstr = "'group': '{group}', 'name': 'condor_{ClusterId}', 'qtime': {QDate}, 'jobid': {ClusterId}, 'queue': '{CreamQueue}', 'start': {JobStartDate}," \
                  " 'state': '{status}', 'cpucount': {RequestCpus}, 'user': '{User}', 'maxwalltime': 129600, 'startAnchor': 'start_time', 'walltime': {walltime}"\
                  "".format(**job)
            print "{%s}" % jobstr

StartdInfo(htcondor.Collector()).printAll()

ScheddInfo(htcondor.Collector()).printAll()

