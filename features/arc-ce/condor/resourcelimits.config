# RAL Tier-1 HTCondor configuration: resource limits

# Job time limit
RemoveDefaultJobWallTime = ( JobStatus == 2 && CurrentTime - EnteredCurrentStatus > 345600 )
RemoveDefaultJobCpuTime  = ( RemoteSysCpu + RemoteUserCpu > 345600 )

# Remove idle jobs with expired proxies
RemoveExpiredProxyIdleJobs = ( JobStatus == 1 && (x509UserProxyExpiration - CurrentTime < 0) )

# Remove Nagios idle jobs
RemoveNagiosIdleJobs = ( JobStatus == 1 && Owner =?= "nagios" && CurrentTime - EnteredCurrentStatus > 60)

# Remove single-core jobs which exceed 3x requested memory
RemoveMemoryUsage = ( JobStatus==2 && RequestCpus == 1 && ResidentSetSize > 3000*RequestMemory )

# Disk usage limit
RemoveDiskUsage = ( DiskUsage > 150000000 )

# Held jobs - don't want them to stay in the system forever, but we want a chance to
# investigate manually
RemoveHeldJobs = ( JobStatus==5 && ((CurrentTime - EnteredCurrentStatus) > 24 * 60 * 60) )

# Held jobs which had exceeded memory limits
RemoveHeldJobsResources = ( JobStatus==5 && HoldReasonCode =?= 34 )

# Make sure HTCondor doesn't attempt to run jobs too many times
RemoveMultipleAttemptedJobs = ( JobRunCount > 10 && JobStatus == 1 )

# Make sure ATLAS jobs don't really start running more than once
RemoveMultipleRunJobs = ( x509UserProxyVOName =?= "atlas" && NumJobStarts > 0 && JobStatus == 1 )

# After 30 minutes, try re-running a held job once only but not if it was held due to exceeding
# resources
SYSTEM_PERIODIC_RELEASE = ((CurrentTime - EnteredCurrentStatus > 30 * 60) && (JobRunCount < 2) && (HoldReasonCode =!= 34))

# Removal of jobs exceeding resource limits
SYSTEM_PERIODIC_REMOVE = $(RemoveDefaultJobWallTime)    || \
                         $(RemoveHeldJobs)              || \
                         $(RemoveHeldJobsResources)     || \
                         $(RemoveMultipleAttemptedJobs) || \
                         $(RemoveMultipleRunJobs)       || \
                         $(RemoveMemoryUsage)           || \
                         $(RemoveDiskUsage)             || \
                         $(RemoveNagiosIdleJobs)

# Provide a reason why jobs were removed
SYSTEM_PERIODIC_REMOVE_REASON = strcat("Job removed by SYSTEM_PERIODIC_REMOVE due to ", \
                                ifThenElse($(RemoveDefaultJobWallTime), "wall time limit exceeded", \
                                ifThenElse($(RemoveHeldJobs), "being held for more than 24 hours", \
                                ifThenElse($(RemoveHeldJobsResources), "exceeding the requested memory", \
                                ifThenElse($(RemoveMultipleAttemptedJobs), "more than 10 restarts", \
                                ifThenElse($(RemoveMultipleRunJobs), "job running more than once", \
                                ifThenElse($(RemoveDiskUsage), "disk usage exceeding 150 GB", \
                                ifThenElse($(RemoveMemoryUsage), "exceeding 3x the requested memory", \
                                ifThenElse($(RemoveNagiosIdleJobs), "being an idle Nagios job", \
                                "unknown reasons")))))))), ".")

